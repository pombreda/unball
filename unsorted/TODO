==== Programmer's TODO list: ====

High Priority:
- When unball unpacks a single file or directory, it should print its name.
- For consistency, it should probably print something like "creating directory xxxxxxx" when it extracts multiple objects.
- http://askubuntu.com/questions/52475/how-to-prepare-auto-updating-ppa
- http://build.opensuse.org/

Publicity:
- Finish and debug the ebuild and put it on bugs.gentoo.org
- Tell the g-scripts.sourceforge.net people about this.
- Put my unball on KDE-Apps
- Get it mentioned on the Thunar website once integration is confirmed as bug-free.

Known Bugs:
- Zip files which store Windows path separators explicitly will extract
  incorrectly when unball uses 7zip. Use csstidy-1.3.zip as the test.
- For some reason, the unit tests don't pass on Kubuntu Gutsy unless --verbose is passed.
- Un-intended behaviour when a passworded zip file is passed in and 7-zip is the chosen extractor.
- I suspect the zoo 2.10 extractor of not being 64-bit compatible. zootest.* unit test failures on amd64 aren't my fault.
  (I may go poking around in the zoo code and submit a patch if I can ever find the time)
- This filename breaks unball --> "-= Foo =-.rar" I should prefix all relative paths with ./ ( -- isn't portable)
- Unball doesn't clean up if you send SIGINT. (The trap command should be used)
- Extracting tar archives can create files that only root can delete. (doesn't ignore stored permissions)
- If there's a gzip/bzip2-compressed tarball which is named something.gz or something.bz2, it won't check
  whether the contents are a tar archive and the user will have to run unball a second time.
- The non-verbose restrictions don't apply to supplementary commands like cp
  and mv. This is a problem because the newest set of GNU Userland tools
  provides visual feedback for things that take longer than some limit. (I
  don't know what exactly)
- If you run the same extraction command twice, you get a second copy of the archive contents
  nested into the first.
- If the archive name or the name of the extracted program/folder contains spaces, then unball will
  sometimes create a containing folder.
- In the case of one or more files having corrupted contents, unball refuses to extract ACE archives.
  I suspect this is a problem with a lot more formats. I'll have to write some unit tests and fix the
  problem. (The problem is that unball just aborts if the backend tool returns a nonzero exit code.)
- arj won't be able to extract split ARJ files when the contents cross archive boundaries. A solution will
  require some of the same changes that fixing problems related to split RAR files requires.
- Cannot extract multi-volume archives generated by GNU tar's -M option. (Note to self: see
  http://www.gnu.org/software/tar/manual/html_node/Using-Multiple-Tapes.html for reference)
- It's almost guaranteed that there are cases where files beginning with a dash (-) break unball.
- unball uses some Bourne-incompatible scripting constructs. (requires bash or possibly ksh)
- Remove testoob and set up a similar system based on the base unittest classes which won't break integration
  for things like Eric3.

Notes:
- MacOS X .pkg packages are actually just directories and .mpkg files are data files which aren't archives.

System Integration:
- http://www.nautilus-actions.org/?q=node/377
- Add a bash-completion script for unball and tie it into the install.sh script.
- GUI-integrated scripts should give some kind of warning on failure.
- Look into automating integration into ROX Filer through non-.desktop means.
- Add a normal .desktop entry so unball can be the default double-click action if people prefer.
- Improve moveToZip so that help2man can be used with it.

Formats and Tools:
- Extractors with Debian/Ubuntu packages: unar lrzip unp orange
- https://en.wikipedia.org/wiki/ARC_%28file_format%29
- Add support for using TheUnarchiver for almost anything... especially Mac
  formats like Stuffit and the old stuff I don't currently support.
- https://code.google.com/p/libarchive/wiki/LibarchiveFormats
- Add support for using lrzip instead of rzip.
- Look into supporting app-arch/macutil and media-video/mkvtoolnix.
- At least identify .UC2 files. (http://filext.com/file-extension/uc2)
- Support extraction of .umod, BioZip, Uz2, and Dzip files.
- There are a ton of unsupported formats in the midnight commander extensions file.
- Add support for using nomarch as an alternative to arc
- Unball only supports Java .war files. (renamed zips) Konqueror .war files are renamed .tgz files.
- Figure out what PC-BSD Installers (.pbi) MacOS X .dist files, .slp, and Ruby gems (.gem)  are, internally.
- Get around to adding lzma, qda, atr, sitx (Stuffit X)
- Look for a way to add support for zip archives compressed using ppmd. (Created by WinZip 10)
- Figure out whether the following programs generate something unball doesn't already unpack: freeze, pax, ppmd, upm
- Consider adding a switch which enables use of UPX decompression when applicable. (UPX is an executable packer)
- Figure out what .xef files are. (WinACE offers to handle them)
- Figure out exactly what format *.slp files use and call the decompressor directly rather than converting them to .tgz with alien.
- Figure out how to make a .bhx file (BinHex ASCII, according to filext.com) for the tests.
- Add more support for identifying disk image formats that cannot be unpacked by unball. (eg. ISO, DMG, BIN, CCD, etc.)
- Add proper split archive support (RAR, ZIP, ACE, ARJ, and what else?)
- Add unshield to the list of *.exe checks if it's capable of unpacking single-file installshield packs.
- Add support for identification (and, if possible, extraction) of .hex (BinHex 1) and .hcx (BinHex 2) files
- Look into the use of http://sourceforge.net/projects/macbinconv
- Add support for using base64tool
- Ruby gems are tar files containing a gzipped tarball and a gzipped metadata file
- Whatever format the "pax" tool reads and writes.
- Add support for "unzoo" as an alternative to "zoo".
- Add support for ish (seems to be a Japanese uuencode-like format) via aish. (also works with .uu and .b64)
- Add support for *-to-ISO conversion starting with the following tools:
  - b5i2iso (BlindWrite 5)
  - bin2iso (.bin/.cue)
  - ccd2iso (CloneCD)
  - mdf2iso (Alcohol 120%)
  - nrg2iso (Nero Burning ROM)
  - poweriso (PowerISO DAA images)
- Add detection for .pae files. (PowerArchiver Encrypted Archives)
- Add the unsupported formats at http://www.wotsit.org/list.asp?fc=4
- Support dmg2img and dmg2iso (http://vu1tur.eu.org/tools/)
- Java Resource Adaptor aRchives are .zip files with .rar extensions. Make sure .zip can always be recognized by the header check.
- Look into using python-lzo to provide a non-subprocess fallback for lzop.
- http://innounp.sourceforge.net/
- http://legroom.net/software/uniextract
- http://www.peazip.org/

Unit Tests:
- Write tests for the Thunar .tap integration script since it's just a shell script.
  - Basic functionality (with spaced filenames)
    - Create
    - Extract
    - Extract to
- Figure out what the problem with my .NCO file is and ensure that there's a regression test.
- Ensure that the extraction tool gets to pick the name when the archive only contains one file or folder.
- Create test files for self-extracting ARJ, LHA, and ZOO. (DosBox/DosEmu if native doesn't work)
- Make unball use stderr for error messages like it's supposed to.
- Add unit tests for split archives (especially split ACE, split RAR using numbered extension (.r## and .###),
	split RAR using numbered suffixes (.part#.rar), split ARJ, and split tar)
- Add a check and a unit test for split ACE files where the first file (*.ACE) is uppercase and the
	following files (*.c??) are lowercase. It freezes up unace and therefore freezes up unball.
	(I've encountered such a problem in the wild)
- Add tests for password-protected archives. (Zip, RAR, and ACE for starters)
- Implement a method of testing each program for formats which can be extracted using multiple backend tools.
	(by adjusting PATH and setting up a dir with symlinks)
- Don't forget to include unit tests in FrAT (pre-final name) to ensure that it recognizes and handles unball errors safely.
- Ensure that unball passes "Missing Extractor" errors out to the calling program as exit codes.
- Make test archives for:
  - Specialized variants of currently tested formats: .egg, .ipk
  - Un-tested self-extractors: arj, lha, sea
  - Stuff which may be difficult to create: .tar.z (apparently different from .tar.Z), .sea.bin, .sit.bin, .dms, .adf, .adz, .alz, .cab (InstallShield), .paq6, .sfark, .slp
  - Stuff which has been tested using non-redistributable (or overly large) archives: .deb, .lzx, .rpm, .sea.hqx
  - Stuff which cannot currently be supported: .sitx, .bh, .cpt, .dar, .dgc, .gca, .msi, .partimg, .rk, .sfpack, .shar, .sqx, .zz
- Test unball's behaviour when handed multiple arguments in the same run.
- Make it so that nonexistant extractors don't trigger a full-blown failure. Instead, display a list of skipped tests at the end with missing required binaries in brackets.
- Add an option to test only certain formats. (eg. for quick re-running while trying to fix a regression)
- Add a unit test for 1.x ACE archives so tests can check whether the problem is an old unace tool.
- Add a "check hard" option which runs the test suite once for each installed shell it finds.
  (Supporting ash, bash, dash, ksh, mksh, pdksh, posh, sash, shish, and zsh)

For Version 0.3.0:
- Make detection by header default so that Zip files with .rar extensions will extract.
- Add support for using GNU screen to split apart the unball-generated and subprocess-generated portions of
  verbose-mode output.

Miscellaneous:
- Add options to moveToZip to convert spaces and other potentially problematic characters into underscores.
  - It should offer any combination of the following three problem sets: DOS/Windows, UNIX shell, and URLs.
- Add optional use of the Gentoo Portage sandbox to ensure nothing gets changed outside of the target dir.
- Add support for recursively unpacking nested archives
- IDEA: Use a while loop and the -k option for the file command to allow properly robust extraction of files with ambiguous headers.
- Look into the option of doing the "move from temp" and "unpack next archive" stages simultaneously to speed
  things on systems where /tmp isn't on the same partition as $TARGET (in other words, skipping the /tmp part)
- Improve the design of the .exe extraction function.
- Fix the unball hack so it only uses /dev/random for the input if stdin has been closed.
- Try to figure out what about /dev/random unace needs so I can pass only that.
- Make call() more robust
- Add signal handlers using `trap`
- Audit the environment and the extractor manpages for variables I should be setting/unsetting
- Check to see if there are any variables I should be marking read-only.
- Make the installer copy the documentation into /usr/share/...
