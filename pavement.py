#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
@todo:
 - I still need to add a manpage for moveToZip.
 - How should I support bzip2/gzip-compressing manpages?
 - Add an apidocs/epydoc command and make sdist run it.

@todo:
 - Decide what to do about prefix mismatches between this and
   Konqueror/Thunar/etc.
 - Figure out how to install to ~/.kde and such if --home
   has been specified.
 - Look into removing my need for paver and/or setuptools
   (http://rhodesmill.org/brandon/2009/eby-magic/)

@todo: Finish building this:
 - http://epydoc.sourceforge.net/api/epydoc.docbuilder-module.html
 - https://help.launchpad.net/Code
 - http://docs.python.org/distutils/setupscript.html#installing-package-data
 - http://docs.python.org/distutils/setupscript.html#installing-additional-files
 - http://docs.python.org/distutils/setupscript.html#debugging-the-setup-script
 - http://docs.python.org/distutils/sourcedist.html#specifying-the-files-to-distribute
 - http://docs.python.org/distutils/apiref.html#distutils.core.setup
 - http://docs.python.org/distutils/extending.html
 - http://wiki.python.org/moin/Distutils/Tutorial
 - http://peak.telecommunity.com/DevCenter/setuptools
 - http://peak.telecommunity.com/DevCenter/PythonEggs

@todo: Announce the new version:
 - https://launchpad.net/unball
 - http://bugs.gentoo.org/194471
 - http://www.cli-apps.org/
 - http://pypi.python.org/pypi
 - http://freshmeat.net/
 - http://www.ohloh.net/

@todo: Blog about these alternatives for non-Paver setup.py use:
 - Source: http://da44en.wordpress.com/2002/11/22/using-distutils/
"""

import datetime, optparse, os, sys
from distutils.command.build import build as __build
from distutils.core import Command
from distutils.errors import DistutilsOptionError

from build_manpage import build_manpage as _build_manpage

from ez_setup import use_setuptools
use_setuptools()

from paver.easy import *
from paver.setuputils import setup

srcdir = os.path.abspath(os.path.join(os.path.dirname(__file__), 'src'))
sys.path.append(srcdir)
import unball

@task
@needs('generate_setup', 'minilib', 'setuptools.command.sdist')
def sdist():
    """Create a source distro with a setup py and paver mini-lib."""
    pass


@task
def clean():
    """Remove autogenerated content from the working tree.
    @todo: Finish re-architecting this and cleaning it up.
    @todo: Make it print a warning/error on except.
    """
    for name in ('build', 'dist', 'setup.py', 'paver-minilib.zip'):
        try:
            if os.path.isdir(name):
                path(name).rmtree()
            elif os.path.isfile(name):
                path(name).unlink()
        except:
            pass
    for fldr, dirs, files in os.walk('.'):
        for dirname in dirs:
            if os.path.splitext(dirname)[1] == ".egg-info":
                try:
                    path(os.path.join(fldr, dirname)).rmtree()
                except:
                    pass
        for fname in files:
            if fname.endswith('.pyc'):
                try:
                    path(os.path.join(fldr, fname)).unlink()
                except:
                    pass

setup(name="Unball",
      version=unball.__version__,
      description="A 'do what I mean' archive extraction wrapper",
      long_description="A simple-to-use tool for when you just want to " +
         "extract an archive without making a mess or caring about what " +
         "format it's in.",
      author="Stephan Sokolow (deitarion/SSokolow)",
      author_email="http://www.ssokolow.com/ContactMe",
      url='https://launchpad.net/unball',
      license="License :: OSI Approved :: GNU General Public License (GPL)",
      #TODO: classifiers, platforms
      # http://pypi.python.org/pypi?%3Aaction=list_classifiers

      package_dir={'': 'src'},
      py_modules=['unball'],
      scripts=['src/moveToZip'],
      entry_points = {
        'console_scripts': [
            'unball = unball:main_func',
        ],
      },
      data_files=[('share/man/man1', ['build/man/unball.1']),
                  ('share/apps/konqueror/servicemenus', ['src/servicemenus/unball.desktop', 'src/servicemenus/moveToZip.desktop']),
                  ('libexec/thunar-archive-plugin', ['src/unball.tap'])],

      cmdclass = {'build_manpage' : _build_manpage},
      test_suite='run_test.get_tests',

      options = {
        'build_manpage': {
            'output' : 'build/man/unball.1',
            'parser' : 'unball:get_opt_parser',
        },
      },
)
