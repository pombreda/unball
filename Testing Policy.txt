TODO:
- Decide on a name for a unified "test this package" shell script.

Python:
- pychecker
- pylint
- run_test.py (Unit Tests)

Shell:
- bash -n (syntax check (short for "noexec"))
- run_test.py or run_test.sh (Unit Tests)

HTML, CSS, & JS:
- htmltidy
- weblint
- csslint-0.6 (from libcroco-0.6.0)
- linklint (or other link checker)
- W3C and WDG HTML/CSS/etc. validators

PHP:
- php -l (lint-like syntax check)
- PEAR-PHPUnit (PHP4) or PEAR-PHPUnit2 (PHP5)

C:
- splint
- gcc -Wall -Wextra -ansi -pedantic
- make test (Run tests using the 'check' unit test framework)

C++:
- g++ -Wall -Wextra -ansi -pedantic (best syntax check I know)
- make test (Run tests using the 'cppunit' unit test framework)

Perl:
- perl -c -W (syntax check)
- perltidy
- run_test.pl (Unit Tests using Test-SimpleUnit)

Java:
- checkstyle (similar to splint and pylint)
- junit
- (optional) dbunit (junit extension for DB-driven apps)
- (optiona) xmlunit (junit/nunit extension for XML-heavy apps)
- Unified build and test scripts. (ant? gmake? shell?)

C# (Mono):
- mcs -warn:4 (best syntax check I could find)
- nunit
- (optiona) xmlunit (junit/nunit extension for XML-heavy apps)

Ruby:
- ruby -c (best syntax check I could find)
- Test::Unit
